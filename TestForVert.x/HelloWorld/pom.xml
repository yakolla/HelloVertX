<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.sample</groupId>
	<artifactId>HelloWorld</artifactId>
	<packaging>jar</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<name>Project - HelloWorld</name>
	<url>http://maven.apache.org</url>

	<parent>
		<groupId>org.sonatype.oss</groupId>
		<artifactId>oss-parent</artifactId>
		<version>7</version>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- Set pullInDeps to true if you want any modules specified in the 'includes' 
			and 'deploys' fields in your mod.json to be automatically pulled in during 
			packaging and added inside your module. Doing this means your module won't 
			download and install those dependencies at run-time when they're first requested. -->
		<vertx.pullInDeps>false</vertx.pullInDeps>

		<!-- Set createFatJar to true if you want to create a fat executable jar 
			which contains the Vert.x binaries along with the module so it can be run 
			with java -jar <jarname> -->
		<vertx.createFatJar>false</vertx.createFatJar>

		<!--Vertx module name -->
		<module.name>${project.groupId}~${project.artifactId}~${project.version}</module.name>

		<!-- The directory where the module will be assembled - you can override 
			this on the command line with -Dmods.directory=mydir -->
		<mods.directory>target/mods</mods.directory>

		<!--Dependency versions -->
		<vertx.version>2.1.5</vertx.version>
		<vertx.testtools.version>2.0.3-final</vertx.testtools.version>
		<junit.version>4.11</junit.version>

		<!--Plugin versions -->
		<maven.compiler.plugin.version>3.0</maven.compiler.plugin.version>
		<maven.resources.plugin.version>2.6</maven.resources.plugin.version>
		<maven.clean.plugin.version>2.5</maven.clean.plugin.version>
		<maven.vertx.plugin.version>2.0.11-final</maven.vertx.plugin.version>
		<maven.surefire.plugin.version>2.14</maven.surefire.plugin.version>
		<maven.failsafe.plugin.version>2.14</maven.failsafe.plugin.version>
		<maven.surefire.report.plugin.version>2.14</maven.surefire.report.plugin.version>
		<maven.javadoc.plugin.version>2.9</maven.javadoc.plugin.version>
		<maven.dependency.plugin.version>2.7</maven.dependency.plugin.version>		
		
	</properties>

	<repositories>
		<repository>
			<id>sonatype-nexus-snapshots</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</repository>
		<repository>
			<id>dtrott</id>
			<url>http://maven.davidtrott.com/repository</url>
	    </repository>		
	</repositories>

	<dependencies>
		<!--Vertx provided dependencies -->
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-core</artifactId>
			<version>${vertx.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-platform</artifactId>
			<version>${vertx.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-hazelcast</artifactId>
			<version>${vertx.version}</version>
			<scope>provided</scope>
		</dependency>
		<!--Test dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>testtools</artifactId>
			<version>${vertx.testtools.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Add any other dependencies that you want packaged into your module 
			(in the lib dir) here as 'compile' dependencies. Here is an example <dependency> 
			<groupId>org.hamcrest</groupId> <artifactId>hamcrest-core</artifactId> <version>1.3</version> 
			<scope>compile</scope> </dependency> -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>4.3.1.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>5.0.3.Final</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.28</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-c3p0</artifactId>
			<version>4.3.1.Final</version>
		</dependency>
		<dependency>
			<groupId>org.apache.thrift</groupId>
			<artifactId>libthrift</artifactId>
			<version>0.9.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.thrift.tools</groupId>
			<artifactId>maven-thrift-plugin</artifactId>
			<version>0.1.11</version>
		</dependency>		
		<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
			<version>1.1.1</version>
		</dependency>
		<dependency>
		  <groupId>com.jetdrone</groupId>
		  <artifactId>yoke</artifactId>
		  <version>2.0.15</version>
		  <scope>provided</scope>
		</dependency>
		<dependency>
		    <groupId>com.pv.networklib</groupId>
		    <artifactId>networklib</artifactId>
		    <version>1.0</version>
		    <scope>system</scope>
		    <systemPath>${basedir}/lib/networklib-0.0.1.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>java3d</groupId>
			<artifactId>vecmath</artifactId>
			<version>1.3.1</version>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.3.1</version>
		</dependency>

				
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>

				<!-- The vert.x Maven plugin -->
				<plugin>
					<groupId>io.vertx</groupId>
					<artifactId>vertx-maven-plugin</artifactId>
					<version>${maven.vertx.plugin.version}</version>
					<!-- You can specify extra config to the plugin as required here <configuration> 
						<configFile>/path/to/MyVerticle.conf</configFile> <instances>1</instances> 
						<classpath>src/main/resources/:src/test/resources/:target/classes/:target/test-classes/</classpath> 
						</configuration> -->
					<!-- Make sure that the plugin uses the vert.x versions from this pom.xml 
						not from its own pom.xml -->
					<dependencies>
						<dependency>
							<groupId>io.vertx</groupId>
							<artifactId>vertx-platform</artifactId>
							<version>${vertx.version}</version>
						</dependency>
						<dependency>
							<groupId>io.vertx</groupId>
							<artifactId>vertx-core</artifactId>
							<version>${vertx.version}</version>
						</dependency>
						<dependency>
							<groupId>io.vertx</groupId>
							<artifactId>vertx-hazelcast</artifactId>
							<version>${vertx.version}</version>
						</dependency>
					</dependencies>
					<executions>
						<execution>
							<id>PullInDeps</id>
							<phase>prepare-package</phase>
							<goals>
								<goal>pullInDeps</goal>
							</goals>
						</execution>
					</executions>
				</plugin>				
            	
				<!-- Other plugins required by the build -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven.compiler.plugin.version}</version>
					<configuration>
						<source>1.7</source>
						<target>1.7</target>
					</configuration>
				</plugin>
				
			    <plugin>
				  <groupId>org.apache.maven.plugins</groupId>
		          <artifactId>maven-antrun-plugin</artifactId>		          
				  <executions>					
				    <execution>
				      <id>build-thrift</id>
				      <phase>generate-sources</phase>
				      <goals><goal>run</goal></goals>
				      
			            <configuration>
			            
					    
			              <target>
							<echo>thrift gen java</echo>
			                <!-- always use properties if available -->
	                        
                        	<mkdir dir="${project.build.directory}/generated-sources/thrift" />
                        	<mkdir dir="${project.build.directory}/generated-sources/thrift/gen-java" />
                        	<delete dir="${project.build.directory}/generated-sources/thrift/gen-java" includeemptydirs="true"/>
                        	<mkdir dir="${project.build.directory}/generated-sources/thrift/gen-java" />
                        	
	                        <exec executable="G:\project\Vert.x\thrift\thrift.cmd" failonerror="true">
	                            <arg value="-gen" />
	                            <arg value="java" />
	                            <arg value="-o" />
	                            <arg value="${project.build.directory}/generated-sources/thrift" />
	                            <!-- set the dir there are thrift files. -->
	                            <arg value="${basedir}/src/main/thrift/" />
	                        </exec>
	                            <!-- You never ever copy generated stuff back into src/* -->
	                            <!-- use Build Helper Maven Plugin to add the generated source -->
	                        
	                        <copy todir="src/main/java" overwrite="true">
	                            <fileset dir="target/generated-sources/thrift/gen-java" />
	                        </copy>
	                        
	                        <echo>thrift gen c#</echo>
			                <!-- always use properties if available -->
			                
                        	<mkdir dir="${project.build.directory}/generated-sources/thrift" />
                        	<mkdir dir="${project.build.directory}/generated-sources/thrift/gen-csharp" />
                        	<delete dir="${project.build.directory}/generated-sources/thrift/gen-csharp" includeemptydirs="true"/>
                        	<mkdir dir="${project.build.directory}/generated-sources/thrift/gen-csharp" />
                        	
	                        <exec executable="G:\project\Vert.x\thrift\thrift.cmd" failonerror="true">
	                            <arg value="-gen" />
	                            <arg value="csharp" />
	                            <arg value="-o" />
	                            <arg value="${project.build.directory}/generated-sources/thrift" />
	                            <!-- since this is a special type of source, it has to be in its own dir -->
	                           <arg value="${basedir}/src/main/thrift/" />
	                        </exec>
	                            <!-- You never ever copy generated stuff back into src/* -->
	                            <!-- use Build Helper Maven Plugin to add the generated source -->
	                        
	                        <copy todir="G:\project\ProjectV\dev\Server\Playground\Unity3d\UITest\Assets" overwrite="true">
	                            <fileset dir="target/generated-sources/thrift/gen-csharp" />
	                        </copy>
			
			              </target>
			            </configuration>
				    </execution>					
				  </executions>
				</plugin>
			    
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven.resources.plugin.version}</version>
					<executions>
						<execution>
							<id>copy-mod-to-target</id>
							<phase>process-classes</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<overwrite>true</overwrite>
								<outputDirectory>${mods.directory}/${module.name}</outputDirectory>
								<resources>
									<resource>
										<directory>target/classes</directory>
									</resource>
								</resources>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${maven.dependency.plugin.version}</version>
					<executions>
						<execution>
							<id>copy-mod-dependencies-to-target</id>
							<phase>process-classes</phase>
							<goals>
								<goal>copy-dependencies</goal>
							</goals>
							<configuration>
								<outputDirectory>${mods.directory}/${module.name}/lib</outputDirectory>
								<includeScope>runtime</includeScope>
							</configuration>
						</execution>
						<execution>
							<id>copy-mod-dependencies-to-target-dependencies</id>
							<phase>process-classes</phase>
							<goals>
								<goal>copy-dependencies</goal>
							</goals>
							<configuration>
								<outputDirectory>target/dependencies</outputDirectory>
								<includeScope>runtime</includeScope>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven.surefire.plugin.version}</version>
					<configuration>
						<includes>
							<include>**/unit/*Test*.java</include>
						</includes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${maven.failsafe.plugin.version}</version>
					<configuration>
						<systemProperties>
							<property>
								<name>vertx.mods</name>
								<value>${mods.directory}</value>
							</property>
						</systemProperties>
						<includes>
							<include>**/integration/**/*Test*</include>
						</includes>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-report-plugin</artifactId>
					<version>${maven.surefire.report.plugin.version}</version>
					<executions>
						<execution>
							<id>generate-test-report</id>
							<phase>test</phase>
							<goals>
								<goal>report-only</goal>
							</goals>
						</execution>
						<execution>
							<id>generate-integration-test-report</id>
							<phase>integration-test</phase>
							<goals>
								<goal>failsafe-report-only</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<artifactId>maven-assembly-plugin</artifactId>
					<configuration>
						<descriptors>
							<descriptor>src/main/assembly/mod.xml</descriptor>
						</descriptors>
					</configuration>
					<executions>
						<execution>
							<id>assemble</id>
							<phase>package</phase>
							<goals>
								<goal>single</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				
			</plugins>
		</pluginManagement>
		<plugins>
		    <plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-antrun-plugin</artifactId>
		        <version>1.8</version>
		    </plugin>
	    </plugins>
	</build>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>${maven.surefire.report.plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven.javadoc.plugin.version}</version>
				<configuration>
					<aggregate>true</aggregate>
				</configuration>
			</plugin>
		</plugins>
	</reporting>
</project>
